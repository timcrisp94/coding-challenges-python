# 3/17. LONGEST SUBSTRING WITHOUT REPEATING CHARACTERS
# * usedChar obj & for loop

# Given a string s, find the length of the longest substring without repeating characters.

# Example 1:

# Input: s = "abcabcbb"
# Output: 3
# Explanation: The answer is "abc", with the length of 3.

# - pseudo - 
# start = maxLen = 0
# usedChar = {}
# FOR i UPTO N
  # if s[i] in usedChar and start <= usedChar[s[i]]:
    # start = usedChar[s[i]] + 1
  # else
    # maxLen = max(maxLen, i - start + 1)
  # usedChar[s[i]] = i
# return maxLen

class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        start = maxLength = 0
        usedChar = {}

        for i in range(len(s)):
          if s[i] in usedChar and start <= usedChar[s[i]]:
            start = usedChar[s[i]] + 1
          else:
            maxLength = max(maxLength, i - start + 1)
          usedChar[s[i]] = i
        return maxLength